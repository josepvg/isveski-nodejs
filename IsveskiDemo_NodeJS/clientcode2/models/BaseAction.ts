/* tslint:disable */
/* eslint-disable */
/**
 * Isveski Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RefreshTicketAction } from './RefreshTicketAction';
import {
    RefreshTicketActionFromJSON,
    RefreshTicketActionFromJSONTyped,
    RefreshTicketActionToJSON,
} from './RefreshTicketAction';
import type { RefreshTicketListAction } from './RefreshTicketListAction';
import {
    RefreshTicketListActionFromJSON,
    RefreshTicketListActionFromJSONTyped,
    RefreshTicketListActionToJSON,
} from './RefreshTicketListAction';
import type { SensorAction } from './SensorAction';
import {
    SensorActionFromJSON,
    SensorActionFromJSONTyped,
    SensorActionToJSON,
} from './SensorAction';
import type { ShowTicketAction } from './ShowTicketAction';
import {
    ShowTicketActionFromJSON,
    ShowTicketActionFromJSONTyped,
    ShowTicketActionToJSON,
} from './ShowTicketAction';
import type { ShowUrlAction } from './ShowUrlAction';
import {
    ShowUrlActionFromJSON,
    ShowUrlActionFromJSONTyped,
    ShowUrlActionToJSON,
} from './ShowUrlAction';


/**
 * 
 * @export
 * @interface BaseAction
 */
export interface BaseAction {
    /**
     * 
     * @type {string}
     * @memberof BaseAction
     */
    readonly actionType: string;
}

/**
 * Check if a given object implements the BaseAction interface.
 */
export function instanceOfBaseAction(value: object): boolean {
    if (!('actionType' in value)) return false;
    return true;
}

export function BaseActionFromJSON(json: any): BaseAction {
    return BaseActionFromJSONTyped(json, false);
}

export function BaseActionFromJSONTyped(json: any, ignoreDiscriminator: boolean): BaseAction {
    if (json == null) {
        return json;
    }
    if (!ignoreDiscriminator) {
        if (json['actionType'] === 'RefreshTicket') {
            return RefreshTicketActionFromJSONTyped(json, true);
        }
        if (json['actionType'] === 'RefreshTicketList') {
            return RefreshTicketListActionFromJSONTyped(json, true);
        }
        if (json['actionType'] === 'Sensor') {
            return SensorActionFromJSONTyped(json, true);
        }
        if (json['actionType'] === 'ShowTicket') {
            return ShowTicketActionFromJSONTyped(json, true);
        }
        if (json['actionType'] === 'ShowUrl') {
            return ShowUrlActionFromJSONTyped(json, true);
        }
    }
    return {
        
        'actionType': json['actionType'],
    };
}

export function BaseActionToJSON(value?: BaseAction | null): any {
    if (value == null) {
        return value;
    }
    return {
        
    };
}

