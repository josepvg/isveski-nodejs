/* tslint:disable */
/* eslint-disable */
/**
 * Isveski Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ActionType } from './ActionType';
import {
    ActionTypeFromJSON,
    ActionTypeFromJSONTyped,
    ActionTypeToJSON,
} from './ActionType';

/**
 * 
 * @export
 * @interface ClientTicketAction
 */
export interface ClientTicketAction {
    /**
     * 
     * @type {string}
     * @memberof ClientTicketAction
     */
    id?: string;
    /**
     * 
     * @type {ActionType}
     * @memberof ClientTicketAction
     */
    actionType?: ActionType;
    /**
     * 
     * @type {string}
     * @memberof ClientTicketAction
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof ClientTicketAction
     */
    data?: string;
    /**
     * 
     * @type {string}
     * @memberof ClientTicketAction
     */
    presentationData?: string;
    /**
     * 
     * @type {string}
     * @memberof ClientTicketAction
     */
    presentationType?: string;
    /**
     * 
     * @type {Date}
     * @memberof ClientTicketAction
     */
    actionTime?: Date;
    /**
     * 
     * @type {string}
     * @memberof ClientTicketAction
     */
    note?: string;
}

/**
 * Check if a given object implements the ClientTicketAction interface.
 */
export function instanceOfClientTicketAction(value: object): boolean {
    return true;
}

export function ClientTicketActionFromJSON(json: any): ClientTicketAction {
    return ClientTicketActionFromJSONTyped(json, false);
}

export function ClientTicketActionFromJSONTyped(json: any, ignoreDiscriminator: boolean): ClientTicketAction {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'actionType': json['actionType'] == null ? undefined : ActionTypeFromJSON(json['actionType']),
        'name': json['name'] == null ? undefined : json['name'],
        'data': json['data'] == null ? undefined : json['data'],
        'presentationData': json['presentationData'] == null ? undefined : json['presentationData'],
        'presentationType': json['presentationType'] == null ? undefined : json['presentationType'],
        'actionTime': json['actionTime'] == null ? undefined : (new Date(json['actionTime'])),
        'note': json['note'] == null ? undefined : json['note'],
    };
}

export function ClientTicketActionToJSON(value?: ClientTicketAction | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'actionType': ActionTypeToJSON(value['actionType']),
        'name': value['name'],
        'data': value['data'],
        'presentationData': value['presentationData'],
        'presentationType': value['presentationType'],
        'actionTime': value['actionTime'] == null ? undefined : ((value['actionTime']).toISOString()),
        'note': value['note'],
    };
}

