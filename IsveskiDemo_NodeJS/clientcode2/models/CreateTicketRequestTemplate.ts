/* tslint:disable */
/* eslint-disable */
/**
 * Isveski Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Template } from './Template';
import {
    instanceOfTemplate,
    TemplateFromJSON,
    TemplateFromJSONTyped,
    TemplateToJSON,
} from './Template';
import type { Template1 } from './Template1';
import {
    instanceOfTemplate1,
    Template1FromJSON,
    Template1FromJSONTyped,
    Template1ToJSON,
} from './Template1';

/**
 * @type CreateTicketRequestTemplate
 * 
 * @export
 */
export type CreateTicketRequestTemplate = { templateType: 'T1' } & Template1 | { templateType: 'Template' } & Template | { templateType: 'Template1' } & Template1;

export function CreateTicketRequestTemplateFromJSON(json: any): CreateTicketRequestTemplate {
    return CreateTicketRequestTemplateFromJSONTyped(json, false);
}

export function CreateTicketRequestTemplateFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateTicketRequestTemplate {
    if (json == null) {
        return json;
    }
    switch (json['templateType']) {
        case 'T1':
            return {...Template1FromJSONTyped(json, true), templateType: 'T1'};
        case 'Template':
            return {...TemplateFromJSONTyped(json, true), templateType: 'Template'};
        case 'Template1':
            return {...Template1FromJSONTyped(json, true), templateType: 'Template1'};
        default:
            throw new Error(`No variant of CreateTicketRequestTemplate exists with 'templateType=${json['templateType']}'`);
    }
}

export function CreateTicketRequestTemplateToJSON(value?: CreateTicketRequestTemplate | null): any {
    if (value == null) {
        return value;
    }
    switch (value['templateType']) {
        case 'T1':
            return Template1ToJSON(value);
        case 'Template':
            return TemplateToJSON(value);
        case 'Template1':
            return Template1ToJSON(value);
        default:
            throw new Error(`No variant of CreateTicketRequestTemplate exists with 'templateType=${value['templateType']}'`);
    }

}

