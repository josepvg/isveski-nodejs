/* tslint:disable */
/* eslint-disable */
/**
 * Isveski Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DetailTemplate } from './DetailTemplate';
import {
    DetailTemplateFromJSON,
    DetailTemplateFromJSONTyped,
    DetailTemplateToJSON,
} from './DetailTemplate';
import type { TemplateButton } from './TemplateButton';
import {
    TemplateButtonFromJSON,
    TemplateButtonFromJSONTyped,
    TemplateButtonToJSON,
} from './TemplateButton';

import {
} from './index';

/**
 * 
 * @export
 * @interface DetailTemplate1
 */
export interface DetailTemplate1 extends DetailTemplate {
    /**
     * 
     * @type {string}
     * @memberof DetailTemplate1
     */
    image?: string;
    /**
     * 
     * @type {string}
     * @memberof DetailTemplate1
     */
    title?: string;
    /**
     * 
     * @type {string}
     * @memberof DetailTemplate1
     */
    description?: string;
    /**
     * 
     * @type {Date}
     * @memberof DetailTemplate1
     */
    time?: Date;
    /**
     * 
     * @type {Date}
     * @memberof DetailTemplate1
     */
    expiry?: Date;
    /**
     * 
     * @type {Array<TemplateButton>}
     * @memberof DetailTemplate1
     */
    buttons?: Array<TemplateButton>;
    /**
     * 
     * @type {string}
     * @memberof DetailTemplate1
     */
    readonly detailType: string;
}

/**
 * Check if a given object implements the DetailTemplate1 interface.
 */
export function instanceOfDetailTemplate1(value: object): boolean {
    if (!('detailType' in value)) return false;
    return true;
}

export function DetailTemplate1FromJSON(json: any): DetailTemplate1 {
    return DetailTemplate1FromJSONTyped(json, false);
}

export function DetailTemplate1FromJSONTyped(json: any, ignoreDiscriminator: boolean): DetailTemplate1 {
    if (json == null) {
        return json;
    }
    if (!ignoreDiscriminator) {
    }
    return {
        ...DetailTemplateFromJSONTyped(json, ignoreDiscriminator),
        'image': json['image'] == null ? undefined : json['image'],
        'title': json['title'] == null ? undefined : json['title'],
        'description': json['description'] == null ? undefined : json['description'],
        'time': json['time'] == null ? undefined : (new Date(json['time'])),
        'expiry': json['expiry'] == null ? undefined : (new Date(json['expiry'])),
        'buttons': json['buttons'] == null ? undefined : ((json['buttons'] as Array<any>).map(TemplateButtonFromJSON)),
        'detailType': json['detailType'],
    };
}

export function DetailTemplate1ToJSON(value?: DetailTemplate1 | null): any {
    if (value == null) {
        return value;
    }
    return {
        ...DetailTemplateToJSON(value),
        'image': value['image'],
        'title': value['title'],
        'description': value['description'],
        'time': value['time'] == null ? undefined : ((value['time'] as any).toISOString()),
        'expiry': value['expiry'] == null ? undefined : ((value['expiry'] as any).toISOString()),
        'buttons': value['buttons'] == null ? undefined : ((value['buttons'] as Array<any>).map(TemplateButtonToJSON)),
    };
}

