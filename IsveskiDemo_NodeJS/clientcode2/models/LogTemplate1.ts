/* tslint:disable */
/* eslint-disable */
/**
 * Isveski Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { LogTemplate } from './LogTemplate';
import {
    LogTemplateFromJSON,
    LogTemplateFromJSONTyped,
    LogTemplateToJSON,
} from './LogTemplate';

import {
} from './index';

/**
 * 
 * @export
 * @interface LogTemplate1
 */
export interface LogTemplate1 extends LogTemplate {
    /**
     * 
     * @type {string}
     * @memberof LogTemplate1
     */
    title?: string;
    /**
     * 
     * @type {string}
     * @memberof LogTemplate1
     */
    description?: string;
    /**
     * 
     * @type {Date}
     * @memberof LogTemplate1
     */
    time: Date;
    /**
     * 
     * @type {string}
     * @memberof LogTemplate1
     */
    readonly templateType: string;
}

/**
 * Check if a given object implements the LogTemplate1 interface.
 */
export function instanceOfLogTemplate1(value: object): boolean {
    if (!('time' in value)) return false;
    if (!('templateType' in value)) return false;
    return true;
}

export function LogTemplate1FromJSON(json: any): LogTemplate1 {
    return LogTemplate1FromJSONTyped(json, false);
}

export function LogTemplate1FromJSONTyped(json: any, ignoreDiscriminator: boolean): LogTemplate1 {
    if (json == null) {
        return json;
    }
    if (!ignoreDiscriminator) {
    }
    return {
        ...LogTemplateFromJSONTyped(json, ignoreDiscriminator),
        'title': json['title'] == null ? undefined : json['title'],
        'description': json['description'] == null ? undefined : json['description'],
        'time': (new Date(json['time'])),
        'templateType': json['templateType'],
    };
}

export function LogTemplate1ToJSON(value?: LogTemplate1 | null): any {
    if (value == null) {
        return value;
    }
    return {
        ...LogTemplateToJSON(value),
        'title': value['title'],
        'description': value['description'],
        'time': ((value['time']).toISOString()),
    };
}

