/* tslint:disable */
/* eslint-disable */
/**
 * Isveski Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { BaseAction } from './BaseAction';
import {
    instanceOfBaseAction,
    BaseActionFromJSON,
    BaseActionFromJSONTyped,
    BaseActionToJSON,
} from './BaseAction';
import type { RefreshTicketAction } from './RefreshTicketAction';
import {
    instanceOfRefreshTicketAction,
    RefreshTicketActionFromJSON,
    RefreshTicketActionFromJSONTyped,
    RefreshTicketActionToJSON,
} from './RefreshTicketAction';
import type { RefreshTicketListAction } from './RefreshTicketListAction';
import {
    instanceOfRefreshTicketListAction,
    RefreshTicketListActionFromJSON,
    RefreshTicketListActionFromJSONTyped,
    RefreshTicketListActionToJSON,
} from './RefreshTicketListAction';
import type { SensorAction } from './SensorAction';
import {
    instanceOfSensorAction,
    SensorActionFromJSON,
    SensorActionFromJSONTyped,
    SensorActionToJSON,
} from './SensorAction';
import type { ShowTicketAction } from './ShowTicketAction';
import {
    instanceOfShowTicketAction,
    ShowTicketActionFromJSON,
    ShowTicketActionFromJSONTyped,
    ShowTicketActionToJSON,
} from './ShowTicketAction';
import type { ShowUrlAction } from './ShowUrlAction';
import {
    instanceOfShowUrlAction,
    ShowUrlActionFromJSON,
    ShowUrlActionFromJSONTyped,
    ShowUrlActionToJSON,
} from './ShowUrlAction';

/**
 * @type SendToTicketRequestActionsInner
 * 
 * @export
 */
export type SendToTicketRequestActionsInner = { actionType: 'RefreshTicket' } & RefreshTicketAction | { actionType: 'RefreshTicketList' } & RefreshTicketListAction | { actionType: 'Sensor' } & SensorAction | { actionType: 'ShowTicket' } & ShowTicketAction | { actionType: 'ShowUrl' } & ShowUrlAction | { actionType: 'BaseAction' } & BaseAction | { actionType: 'RefreshTicketAction' } & RefreshTicketAction | { actionType: 'RefreshTicketListAction' } & RefreshTicketListAction | { actionType: 'SensorAction' } & SensorAction | { actionType: 'ShowTicketAction' } & ShowTicketAction | { actionType: 'ShowUrlAction' } & ShowUrlAction;

export function SendToTicketRequestActionsInnerFromJSON(json: any): SendToTicketRequestActionsInner {
    return SendToTicketRequestActionsInnerFromJSONTyped(json, false);
}

export function SendToTicketRequestActionsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): SendToTicketRequestActionsInner {
    if (json == null) {
        return json;
    }
    switch (json['actionType']) {
        case 'RefreshTicket':
            return {...RefreshTicketActionFromJSONTyped(json, true), actionType: 'RefreshTicket'};
        case 'RefreshTicketList':
            return {...RefreshTicketListActionFromJSONTyped(json, true), actionType: 'RefreshTicketList'};
        case 'Sensor':
            return {...SensorActionFromJSONTyped(json, true), actionType: 'Sensor'};
        case 'ShowTicket':
            return {...ShowTicketActionFromJSONTyped(json, true), actionType: 'ShowTicket'};
        case 'ShowUrl':
            return {...ShowUrlActionFromJSONTyped(json, true), actionType: 'ShowUrl'};
        case 'BaseAction':
            return {...BaseActionFromJSONTyped(json, true), actionType: 'BaseAction'};
        case 'RefreshTicketAction':
            return {...RefreshTicketActionFromJSONTyped(json, true), actionType: 'RefreshTicketAction'};
        case 'RefreshTicketListAction':
            return {...RefreshTicketListActionFromJSONTyped(json, true), actionType: 'RefreshTicketListAction'};
        case 'SensorAction':
            return {...SensorActionFromJSONTyped(json, true), actionType: 'SensorAction'};
        case 'ShowTicketAction':
            return {...ShowTicketActionFromJSONTyped(json, true), actionType: 'ShowTicketAction'};
        case 'ShowUrlAction':
            return {...ShowUrlActionFromJSONTyped(json, true), actionType: 'ShowUrlAction'};
        default:
            throw new Error(`No variant of SendToTicketRequestActionsInner exists with 'actionType=${json['actionType']}'`);
    }
}

export function SendToTicketRequestActionsInnerToJSON(value?: SendToTicketRequestActionsInner | null): any {
    if (value == null) {
        return value;
    }
    switch (value['actionType']) {
        case 'RefreshTicket':
            return RefreshTicketActionToJSON(value);
        case 'RefreshTicketList':
            return RefreshTicketListActionToJSON(value);
        case 'Sensor':
            return SensorActionToJSON(value);
        case 'ShowTicket':
            return ShowTicketActionToJSON(value);
        case 'ShowUrl':
            return ShowUrlActionToJSON(value);
        case 'BaseAction':
            return BaseActionToJSON(value);
        case 'RefreshTicketAction':
            return RefreshTicketActionToJSON(value);
        case 'RefreshTicketListAction':
            return RefreshTicketListActionToJSON(value);
        case 'SensorAction':
            return SensorActionToJSON(value);
        case 'ShowTicketAction':
            return ShowTicketActionToJSON(value);
        case 'ShowUrlAction':
            return ShowUrlActionToJSON(value);
        default:
            throw new Error(`No variant of SendToTicketRequestActionsInner exists with 'actionType=${value['actionType']}'`);
    }

}

