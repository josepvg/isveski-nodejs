/* tslint:disable */
/* eslint-disable */
/**
 * Isveski Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Template } from './Template';
import {
    TemplateFromJSON,
    TemplateFromJSONTyped,
    TemplateToJSON,
} from './Template';

import {
} from './index';

/**
 * 
 * @export
 * @interface Template1
 */
export interface Template1 extends Template {
    /**
     * 
     * @type {string}
     * @memberof Template1
     */
    image?: string;
    /**
     * 
     * @type {string}
     * @memberof Template1
     */
    title?: string;
    /**
     * 
     * @type {string}
     * @memberof Template1
     */
    description?: string;
    /**
     * 
     * @type {Date}
     * @memberof Template1
     */
    time?: Date;
    /**
     * 
     * @type {Date}
     * @memberof Template1
     */
    expiry?: Date;
    /**
     * 
     * @type {string}
     * @memberof Template1
     */
    readonly templateType: string;
}

/**
 * Check if a given object implements the Template1 interface.
 */
export function instanceOfTemplate1(value: object): boolean {
    if (!('templateType' in value)) return false;
    return true;
}

export function Template1FromJSON(json: any): Template1 {
    return Template1FromJSONTyped(json, false);
}

export function Template1FromJSONTyped(json: any, ignoreDiscriminator: boolean): Template1 {
    if (json == null) {
        return json;
    }
    if (!ignoreDiscriminator) {
    }
    return {
        ...TemplateFromJSONTyped(json, ignoreDiscriminator),
        'image': json['image'] == null ? undefined : json['image'],
        'title': json['title'] == null ? undefined : json['title'],
        'description': json['description'] == null ? undefined : json['description'],
        'time': json['time'] == null ? undefined : (new Date(json['time'])),
        'expiry': json['expiry'] == null ? undefined : (new Date(json['expiry'])),
        'templateType': json['templateType'],
    };
}

export function Template1ToJSON(value?: Template1 | null): any {
    if (value == null) {
        return value;
    }
    return {
        ...TemplateToJSON(value),
        'image': value['image'],
        'title': value['title'],
        'description': value['description'],
        'time': value['time'] == null ? undefined : ((value['time'] as any).toISOString()),
        'expiry': value['expiry'] == null ? undefined : ((value['expiry'] as any).toISOString()),
    };
}

